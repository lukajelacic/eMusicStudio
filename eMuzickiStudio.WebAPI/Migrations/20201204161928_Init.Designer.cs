// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eMuzickiStudio.WebAPI.Database;

namespace eMuzickiStudio.WebAPI.Migrations
{
    [DbContext(typeof(_150192V1Context))]
    [Migration("20201204161928_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("GradId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Klijenti", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Banovan");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<int>("GradId");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50);

                    b.HasKey("KlijentId")
                        .HasName("PK__Klijenti__5F05D8AEEDF14F69");

                    b.HasIndex("GradId");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefon")
                        .HasMaxLength(50);

                    b.Property<int>("UlogaId");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnic__80B06D41F5FF910E");

                    b.HasIndex("UlogaId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.MuzickaOprema", b =>
                {
                    b.Property<int>("MuzickaOpremaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cijena");

                    b.Property<int>("NaStanju");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte[]>("Slika");

                    b.Property<int>("VrstaId");

                    b.HasKey("MuzickaOpremaId");

                    b.HasIndex("VrstaId");

                    b.ToTable("MuzickaOprema");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjenaID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KlijentId");

                    b.Property<int>("MuzickaOpremaId");

                    b.Property<int>("Ocjena");

                    b.HasKey("OcjenaId")
                        .HasName("PK__Ocjene__E6FC7B49A040F860");

                    b.HasIndex("KlijentId");

                    b.HasIndex("MuzickaOpremaId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.RezervacijaStavke", b =>
                {
                    b.Property<int>("RezervacijaStavkaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina");

                    b.Property<int>("MuzickaOpremaId");

                    b.Property<int>("RezervacijaId");

                    b.HasKey("RezervacijaStavkaId")
                        .HasName("PK__Rezervac__D11E50DFFFF545FF");

                    b.HasIndex("MuzickaOpremaId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("RezervacijaStavke");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Arhivirana");

                    b.Property<int>("BrojRezervacije")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Cijena");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumRezervacije");

                    b.Property<int>("KlijentId");

                    b.Property<int?>("KorisnikId");

                    b.Property<bool?>("Otkazano");

                    b.Property<bool>("Status");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44DD90634C31");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.RezervacijeGluveSobe", b =>
                {
                    b.Property<int>("RezervacijeGluveSobeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KlijentId");

                    b.Property<TimeSpan>("VrijemeDo");

                    b.Property<TimeSpan>("VrijemeOd");

                    b.HasKey("RezervacijeGluveSobeId");

                    b.HasIndex("KlijentId");

                    b.ToTable("RezervacijeGluveSobe");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Termini", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aktivan");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId");

                    b.Property<TimeSpan>("VrijemeDo");

                    b.Property<TimeSpan>("VrijemeOd");

                    b.HasKey("TerminId")
                        .HasName("PK__Termini__42126C95AD36833F");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Termini");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasMaxLength(200);

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloge__DCAB23CB99CF9853");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Vrsta", b =>
                {
                    b.Property<int>("VrstaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("VrstaId");

                    b.ToTable("Vrsta");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Klijenti", b =>
                {
                    b.HasOne("eMuzickiStudio.WebAPI.Database.Grad", "Grad")
                        .WithMany("Klijenti")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK_GradId");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Korisnici", b =>
                {
                    b.HasOne("eMuzickiStudio.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("Korisnici")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_UlogaId_Korisnici");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.MuzickaOprema", b =>
                {
                    b.HasOne("eMuzickiStudio.WebAPI.Database.Vrsta", "Vrsta")
                        .WithMany("MuzickaOprema")
                        .HasForeignKey("VrstaId")
                        .HasConstraintName("FK_VrstaId");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("eMuzickiStudio.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Ocjene")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_KlijentId_Ocjena");

                    b.HasOne("eMuzickiStudio.WebAPI.Database.MuzickaOprema", "MuzickaOprema")
                        .WithMany("Ocjene")
                        .HasForeignKey("MuzickaOpremaId")
                        .HasConstraintName("FK_MuzickaOprema_Ocjena");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.RezervacijaStavke", b =>
                {
                    b.HasOne("eMuzickiStudio.WebAPI.Database.MuzickaOprema", "MuzickaOprema")
                        .WithMany("RezervacijaStavke")
                        .HasForeignKey("MuzickaOpremaId")
                        .HasConstraintName("FK_MuzickaOprema");

                    b.HasOne("eMuzickiStudio.WebAPI.Database.Rezervacije", "Rezervacija")
                        .WithMany("RezervacijaStavke")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK_Rezervacija");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Rezervacije", b =>
                {
                    b.HasOne("eMuzickiStudio.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_KlijentId_Rezervacije");

                    b.HasOne("eMuzickiStudio.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisnikId_Rezervacije");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.RezervacijeGluveSobe", b =>
                {
                    b.HasOne("eMuzickiStudio.WebAPI.Database.Klijenti", "Klijent")
                        .WithMany("RezervacijeGluveSobe")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_KlijentId_GluvaSoba");
                });

            modelBuilder.Entity("eMuzickiStudio.WebAPI.Database.Termini", b =>
                {
                    b.HasOne("eMuzickiStudio.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Termini")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisnikId_Termin")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
